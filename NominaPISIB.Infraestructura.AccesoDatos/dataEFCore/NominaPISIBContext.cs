// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace NominaPISIB.Infraestructura.AccesoDatos;

public partial class NominaPISIBContext : DbContext
{
    public NominaPISIBContext()
    {
    }

    public NominaPISIBContext(DbContextOptions<NominaPISIBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AprobacionVacaciones> AprobacionVacaciones { get; set; }

    public virtual DbSet<Asistencias> Asistencias { get; set; }

    public virtual DbSet<Bonificaciones> Bonificaciones { get; set; }

    public virtual DbSet<Contratos> Contratos { get; set; }

    public virtual DbSet<ContratosTipo> ContratosTipo { get; set; }

    public virtual DbSet<Descuentos> Descuentos { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<EmpleadosVacacionesTotales> EmpleadosVacacionesTotales { get; set; }

    public virtual DbSet<Inasistencias> Inasistencias { get; set; }

    public virtual DbSet<Licencias> Licencias { get; set; }

    public virtual DbSet<Nominas> Nominas { get; set; }

    public virtual DbSet<Puestos> Puestos { get; set; }

    public virtual DbSet<SolicitudVacaciones> SolicitudVacaciones { get; set; }

    /*protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\leo;Initial Catalog=NominaPisip;Integrated Security=True;Encrypt=True");*/

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AprobacionVacaciones>(entity =>
        {
            entity.HasKey(e => e.idAprobacionVacacion).HasName("PK__Aprobaci__7609E86F3760E6F1");

            entity.HasOne(d => d.idSolicitudVacacionNavigation).WithMany(p => p.AprobacionVacaciones)
                .HasForeignKey(d => d.idSolicitudVacacion)
                .HasConstraintName("FK__Aprobacio__idSol__25518C17");
        });

        modelBuilder.Entity<Asistencias>(entity =>
        {
            entity.HasKey(e => e.idAsistencia).HasName("PK__Asistenc__4E1AB89418E8C586");

            entity.HasOne(d => d.FKidEmpleadoNavigation).WithMany(p => p.Asistencias)
                .HasForeignKey(d => d.FKidEmpleado)
                .HasConstraintName("FK__Asistenci__FKidE__2DE6D218");
        });

        modelBuilder.Entity<Bonificaciones>(entity =>
        {
            entity.HasKey(e => e.idBonificaciones).HasName("PK__Bonifica__AD053A98D87BF74D");

            entity.Property(e => e.BonificacionDescripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BonificacionMonto).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.BonificacionTipo)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.idEmpleadoNavigation).WithMany(p => p.Bonificaciones)
                .HasForeignKey(d => d.idEmpleado)
                .HasConstraintName("FK__Bonificac__idEmp__367C1819");
        });

        modelBuilder.Entity<Contratos>(entity =>
        {
            entity.HasKey(e => e.idContrato).HasName("PK__Contrato__91431FE1BF8C44C3");

            entity.Property(e => e.ContratoSalario).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.FKidContratoTipoNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.FKidContratoTipo)
                .HasConstraintName("FK__Contratos__FKidC__1BC821DD");

            entity.HasOne(d => d.FKidEmpleadoNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.FKidEmpleado)
                .HasConstraintName("FK__Contratos__FKidE__1AD3FDA4");
        });

        modelBuilder.Entity<ContratosTipo>(entity =>
        {
            entity.HasKey(e => e.idContratoTipo).HasName("PK__Contrato__A7A6818B148F01B2");

            entity.Property(e => e.ContratoJornada)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.ContratoTipoNombre)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Descuentos>(entity =>
        {
            entity.HasKey(e => e.idDescuento).HasName("PK__Descuent__33F69846E6260ABC");

            entity.Property(e => e.DescuentoDescripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DescuentoMonto).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.DescuentoTipo)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.idEmpleadoNavigation).WithMany(p => p.Descuentos)
                .HasForeignKey(d => d.idEmpleado)
                .HasConstraintName("FK__Descuento__idEmp__339FAB6E");
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.idEmpleado).HasName("PK__Empleado__5295297C7D328C82");

            entity.Property(e => e.EmpleadoApellidos)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoCedula)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoCorreo)
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoEstado)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoGenero)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoNombres)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
            entity.Property(e => e.EmpleadoTelfPersonal)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);

            entity.HasOne(d => d.FKidPuestoNavigation).WithMany(p => p.Empleados)
                .HasForeignKey(d => d.FKidPuesto)
                .HasConstraintName("FK__Empleados__FKidP__160F4887");
        });

        modelBuilder.Entity<EmpleadosVacacionesTotales>(entity =>
        {
            entity.HasKey(e => e.idEmpleado).HasName("PK__Empleado__5295297C5EFE019A");

            entity.Property(e => e.idEmpleado).ValueGeneratedNever();

            entity.HasOne(d => d.idEmpleadoNavigation).WithOne(p => p.EmpleadosVacacionesTotales)
                .HasForeignKey<EmpleadosVacacionesTotales>(d => d.idEmpleado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Empleados__idEmp__30C33EC3");
        });

        modelBuilder.Entity<Inasistencias>(entity =>
        {
            entity.HasKey(e => new { e.idLicencia, e.idEmpleado, e.InasistenciaFecha }).HasName("PK__Inasiste__EEEA3ED8AFFBEBBF");

            entity.HasOne(d => d.idEmpleadoNavigation).WithMany(p => p.Inasistencias)
                .HasForeignKey(d => d.idEmpleado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inasisten__idEmp__2B0A656D");

            entity.HasOne(d => d.idLicenciaNavigation).WithMany(p => p.Inasistencias)
                .HasForeignKey(d => d.idLicencia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inasisten__idLic__2A164134");
        });

        modelBuilder.Entity<Licencias>(entity =>
        {
            entity.HasKey(e => e.idLicencia).HasName("PK__Licencia__5FB9A24BEFC6C4A6");

            entity.Property(e => e.LicenciaNombre)
                .IsRequired()
                .HasMaxLength(45)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Nominas>(entity =>
        {
            entity.HasKey(e => e.idNomina).HasName("PK__Nominas__BB6DB673A28037AD");

            entity.Property(e => e.NominaBonificaciones).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.NominaDescuentos).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.NominaSalarioBase).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.NominaSalarioNeto).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.idEmpleadoNavigation).WithMany(p => p.Nominas)
                .HasForeignKey(d => d.idEmpleado)
                .HasConstraintName("FK__Nominas__idEmple__1EA48E88");
        });

        modelBuilder.Entity<Puestos>(entity =>
        {
            entity.HasKey(e => e.idPuesto).HasName("PK__Puestos__ADF48F19858BAE31");

            entity.Property(e => e.PuestoNombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PuestoSalario).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<SolicitudVacaciones>(entity =>
        {
            entity.HasKey(e => e.idSolicitudVacacion).HasName("PK__Solicitu__C81F1AB199E34669");

            entity.HasOne(d => d.idEmpleadoNavigation).WithMany(p => p.SolicitudVacaciones)
                .HasForeignKey(d => d.idEmpleado)
                .HasConstraintName("FK__Solicitud__idEmp__22751F6C");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}